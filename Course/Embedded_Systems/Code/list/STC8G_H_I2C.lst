C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       12/26/2024 04:48:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC8G_H_I2C
OBJECT MODULE PLACED IN .\list\STC8G_H_I2C.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE Library\STC8G_H_I2C.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Config;.\Driv
                    -er;.\Device;.\Library) DEBUG PRINT(.\list\STC8G_H_I2C.lst) TABS(2) OBJECT(.\list\STC8G_H_I2C.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_H_I2C.h"
  14          
  15          u8 xdata I2C_Buffer[I2C_BUF_LENTH];
  16          
  17          #define SLAW    0xA2
  18          #define SLAR    0xA3
  19          
  20          //========================================================================
  21          // 函数: void I2C_Init(I2C_InitTypeDef *I2Cx)
  22          // 描述: I2C初始化程序.
  23          // 参数: I2Cx: 结构参数,请参考I2C.h里的定义.
  24          // 返回: none.
  25          // 版本: V1.0, 2012-11-22
  26          //========================================================================
  27          void I2C_Init(I2C_InitTypeDef *I2Cx)
  28          {
  29   1        if(I2Cx->I2C_Mode == I2C_Mode_Master)
  30   1        {
  31   2          I2C_Master();     //设为主机  
  32   2          I2CMSST = 0x00;   //清除I2C主机状态寄存器
  33   2          I2C_SetSpeed(I2Cx->I2C_Speed);
  34   2          if(I2Cx->I2C_MS_WDTA == ENABLE)   I2C_WDTA_EN();  //使能自动发送
  35   2          else                  I2C_WDTA_DIS(); //禁止自动发送
  36   2        }
  37   1        else
  38   1        {
  39   2          I2C_Slave();  //设为从机
  40   2          I2CSLST = 0x00;   //清除I2C从机状态寄存器
  41   2          I2C_Address(I2Cx->I2C_SL_ADR);
  42   2          if(I2Cx->I2C_SL_MA == ENABLE)   I2C_MATCH_EN(); //从机地址比较功能，只接受相匹配地址
  43   2          else                  I2C_MATCH_DIS();  //禁止从机地址比较功能，接受所有设备地址
  44   2        }
  45   1        
  46   1        I2C_Function(I2Cx->I2C_Enable);
  47   1      }
  48          
  49          //========================================================================
  50          // 函数: u8 Get_MSBusy_Status (void)
  51          // 描述: 获取主机忙碌状态.
  52          // 参数: none.
  53          // 返回: 主机忙碌状态.
  54          // 版本: V1.0, 2012-11-22
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       12/26/2024 04:48:26 PAGE 2   

  55          //========================================================================
  56          u8 Get_MSBusy_Status(void)
  57          {
  58   1        return (I2CMSST & 0x80);
  59   1      }
  60          
  61          //========================================================================
  62          // 函数: void Wait (void)
  63          // 描述: 等待主机模式I2C控制器执行完成I2CMSCR.
  64          // 参数: none.
  65          // 返回: none.
  66          // 版本: V1.0, 2012-11-22
  67          //========================================================================
  68          void Wait()
  69          {
  70   1        while (!(I2CMSST & 0x40));
  71   1        I2CMSST &= ~0x40;
  72   1      }
  73          
  74          //========================================================================
  75          // 函数: void Start (void)
  76          // 描述: I2C总线起始函数.
  77          // 参数: none.
  78          // 返回: none.
  79          // 版本: V1.0, 2020-09-15
  80          //========================================================================
  81          void Start()
  82          {
  83   1        I2CMSCR = 0x01;                         //发送START命令
  84   1        Wait();
  85   1      }
  86          
  87          //========================================================================
  88          // 函数: void SendData (char dat)
  89          // 描述: I2C发送一个字节数据函数.
  90          // 参数: 发送的数据.
  91          // 返回: none.
  92          // 版本: V1.0, 2020-09-15
  93          //========================================================================
  94          void SendData(char dat)
  95          {
  96   1        I2CTXD = dat;                           //写数据到数据缓冲区
  97   1        I2CMSCR = 0x02;                         //发送SEND命令
  98   1        Wait();
  99   1      }
 100          
 101          //========================================================================
 102          // 函数: void RecvACK (void)
 103          // 描述: I2C获取ACK函数.
 104          // 参数: none.
 105          // 返回: none.
 106          // 版本: V1.0, 2020-09-15
 107          //========================================================================
 108          void RecvACK()
 109          {
 110   1        I2CMSCR = 0x03;                         //发送读ACK命令
 111   1        Wait();
 112   1      }
 113          
 114          //========================================================================
 115          // 函数: char RecvData (void)
 116          // 描述: I2C读取一个字节数据函数.
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       12/26/2024 04:48:26 PAGE 3   

 117          // 参数: none.
 118          // 返回: 读取数据.
 119          // 版本: V1.0, 2020-09-15
 120          //========================================================================
 121          char RecvData()
 122          {
 123   1        I2CMSCR = 0x04;                         //发送RECV命令
 124   1        Wait();
 125   1        return I2CRXD;
 126   1      }
 127          
 128          //========================================================================
 129          // 函数: void SendACK (void)
 130          // 描述: I2C发送ACK函数.
 131          // 参数: none.
 132          // 返回: none.
 133          // 版本: V1.0, 2020-09-15
 134          //========================================================================
 135          void SendACK()
 136          {
 137   1        I2CMSST = 0x00;                         //设置ACK信号
 138   1        I2CMSCR = 0x05;                         //发送ACK命令
 139   1        Wait();
 140   1      }
 141          
 142          //========================================================================
 143          // 函数: void SendNAK (void)
 144          // 描述: I2C发送NAK函数.
 145          // 参数: none.
 146          // 返回: none.
 147          // 版本: V1.0, 2020-09-15
 148          //========================================================================
 149          void SendNAK()
 150          {
 151   1        I2CMSST = 0x01;                         //设置NAK信号
 152   1        I2CMSCR = 0x05;                         //发送ACK命令
 153   1        Wait();
 154   1      }
 155          
 156          //========================================================================
 157          // 函数: void Stop (void)
 158          // 描述: I2C总线停止函数.
 159          // 参数: none.
 160          // 返回: none.
 161          // 版本: V1.0, 2020-09-15
 162          //========================================================================
 163          void Stop()
 164          {
 165   1        I2CMSCR = 0x06;                         //发送STOP命令
 166   1        Wait();
 167   1      }
 168          
 169          //========================================================================
 170          // 函数: void SendCmdData (u8 cmd, u8 dat)
 171          // 描述: I2C发送一个字节数据函数.
 172          // 参数: 命令/数据.
 173          // 返回: none.
 174          // 版本: V1.0, 2020-09-15
 175          //========================================================================
 176          void SendCmdData(u8 cmd, u8 dat)
 177          {
 178   1        I2CTXD = dat;                           //写数据到数据缓冲区
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       12/26/2024 04:48:26 PAGE 4   

 179   1        I2CMSCR = cmd;                          //设置命令
 180   1        Wait();
 181   1      }
 182          
 183          //========================================================================
 184          // 函数: void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
 185          // 描述: I2C写入数据函数.
 186          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p写入数据存储位置, number写入数据个数.
 187          // 返回: none.
 188          // 版本: V1.0, 2020-09-15
 189          //========================================================================
 190          void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)  /*  DeviceAddress,WordAddress,First Data 
             -Address,Byte lenth   */
 191          {
 192   1        Start();                                //发送起始命令
 193   1        SendData(dev_addr);                     //发送设备地址+写命令
 194   1        RecvACK();
 195   1        SendData(mem_addr);                     //发送存储地址
 196   1        RecvACK();
 197   1        do
 198   1        {
 199   2          SendData(*p++);
 200   2          RecvACK();
 201   2        }
 202   1        while(--number);
 203   1        Stop();                                 //发送停止命令
 204   1      }
 205          
 206          //========================================================================
 207          // 函数: void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
 208          // 描述: I2C读取数据函数.
 209          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p读取数据存储位置, number读取数据个数.
 210          // 返回: none.
 211          // 版本: V1.0, 2020-09-15
 212          //========================================================================
 213          void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)   /*  DeviceAddress,WordAddress,First Data 
             -Address,Byte lenth   */
 214          {
 215   1        Start();                                //发送起始命令
 216   1        SendData(dev_addr);                     //发送设备地址+写命令
 217   1        RecvACK();
 218   1        SendData(mem_addr);                     //发送存储地址
 219   1        RecvACK();
 220   1        Start();                                //发送起始命令
 221   1        SendData(dev_addr|1);                   //发送设备地址+读命令
 222   1        RecvACK();
 223   1        do
 224   1        {
 225   2          *p = RecvData();
 226   2          p++;
 227   2          if(number != 1) SendACK();          //send ACK
 228   2        }
 229   1        while(--number);
 230   1        SendNAK();                              //send no ACK 
 231   1        Stop();                                 //发送停止命令
 232   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
C51 COMPILER V9.60.0.0   STC8G_H_I2C                                                       12/26/2024 04:48:26 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
