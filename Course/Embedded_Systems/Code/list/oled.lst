C51 COMPILER V9.60.0.0   OLED                                                              12/26/2024 09:12:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\list\oled.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE Device\oled.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Config;.\Driver;.\Dev
                    -ice;.\Library) DEBUG PRINT(.\list\oled.lst) TABS(2) OBJECT(.\list\oled.obj)

line level    source

   1          #include "oled.h"
   2          
   3          void OLED_WriteCommand(uint8 Command)
   4          {
   5   1        OLED_I2C_Start();
   6   1        OLED_I2C_SendByte(0x78);    //从机地址
   7   1        OLED_I2C_SendByte(0x00);    //写命令
   8   1        OLED_I2C_SendByte(Command); 
   9   1        OLED_I2C_Stop();
  10   1      }
  11          
  12          void OLED_WriteData(uint8 Data)
  13          {
  14   1        OLED_I2C_Start();
  15   1        OLED_I2C_SendByte(0x78);    //从机地址
  16   1        OLED_I2C_SendByte(0x40);    //写数据
  17   1        OLED_I2C_SendByte(Data);
  18   1        OLED_I2C_Stop();
  19   1      }
  20          
  21          void OLED_SetCursor(uint8 Y, uint8 X)
  22          {
  23   1        OLED_WriteCommand(0xB0 | Y);          //设置Y位置
  24   1        OLED_WriteCommand(0x10 | ((X & 0xF0) >> 4));  //设置X位置高4位
  25   1        OLED_WriteCommand(0x00 | (X & 0x0F));     //设置X位置低4位
  26   1      }
  27          
  28          void OLED_Clear(void)
  29          {  
  30   1        uint8 i, j;
  31   1        for (j = 0; j < 8; j++)
  32   1        {
  33   2          OLED_SetCursor(j, 0);
  34   2          for(i = 0; i < 128; i++)
  35   2          {
  36   3            OLED_WriteData(0x00);
  37   3          }
  38   2        }
  39   1      }
  40          
  41          void OLED_Init(void)
  42          {
  43   1        uint32 i, j;
  44   1        
  45   1        for (i = 0; i < 1000; i++)      //上电延时
  46   1        {
  47   2          for (j = 0; j < 1000; j++);
  48   2        }
  49   1        
  50   1      //  OLED_I2C_Init();      //端口初始化
  51   1        
  52   1        OLED_WriteCommand(0xAE);  //关闭显示
  53   1        
  54   1        OLED_WriteCommand(0xD5);  //设置显示时钟分频比/振荡器频率
C51 COMPILER V9.60.0.0   OLED                                                              12/26/2024 09:12:18 PAGE 2   

  55   1        OLED_WriteCommand(0x80);
  56   1        
  57   1        OLED_WriteCommand(0xA8);  //设置多路复用率
  58   1        OLED_WriteCommand(0x3F);
  59   1        
  60   1        OLED_WriteCommand(0xD3);  //设置显示偏移
  61   1        OLED_WriteCommand(0x00);
  62   1        
  63   1        OLED_WriteCommand(0x40);  //设置显示开始行
  64   1        
  65   1        OLED_WriteCommand(0xA1);  //设置左右方向，0xA1正常 0xA0左右反置
  66   1        
  67   1        OLED_WriteCommand(0xC8);  //设置上下方向，0xC8正常 0xC0上下反置
  68   1      
  69   1        OLED_WriteCommand(0xDA);  //设置COM引脚硬件配置
  70   1        OLED_WriteCommand(0x12);
  71   1        
  72   1        OLED_WriteCommand(0x81);  //设置对比度控制
  73   1        OLED_WriteCommand(0xCF);
  74   1      
  75   1        OLED_WriteCommand(0xD9);  //设置预充电周期
  76   1        OLED_WriteCommand(0xF1);
  77   1      
  78   1        OLED_WriteCommand(0xDB);  //设置VCOMH取消选择级别
  79   1        OLED_WriteCommand(0x30);
  80   1      
  81   1        OLED_WriteCommand(0xA4);  //设置整个显示打开/关闭
  82   1      
  83   1        OLED_WriteCommand(0xA6);  //设置正常/倒转显示
  84   1      
  85   1        OLED_WriteCommand(0x8D);  //设置充电泵
  86   1        OLED_WriteCommand(0x14);
  87   1      
  88   1        OLED_WriteCommand(0xAF);  //开启显示
  89   1          
  90   1        OLED_Clear();       //OLED清屏
  91   1      }
  92          
  93          void OLED_DrawDot(uint8 x, uint8 y)
  94          {
  95   1        uint8 pos, bx, temp=0, i;
  96   1          
  97   1        if(x > 127 || y > 63) 
  98   1          return;
  99   1      
 100   1        y = 63 - y;
 101   1        
 102   1        pos   = y / 8;
 103   1        bx    = y % 8;
 104   1        temp  = 1<<(bx);
 105   1        
 106   1        OLED_SetCursor(pos, x);
 107   1        OLED_WriteData(temp);
 108   1        
 109   1        for(i = 0; i < 8; i++ )
 110   1        {
 111   2          if(i != pos)
 112   2          {
 113   3            OLED_SetCursor(i, x);
 114   3            OLED_WriteData(0x00);
 115   3          }
 116   2        }
C51 COMPILER V9.60.0.0   OLED                                                              12/26/2024 09:12:18 PAGE 3   

 117   1      }
 118          
 119          void OLED_DrawLine(uint8 x1, uint8 y1, uint8 x2,uint8 y2)
 120          {
 121   1        uint8 t; 
 122   1        int16 offset_x,offset_y; 
 123   1        int16 incx,incy,uRow,uCol;
 124   1        float K = 0.0f;
 125   1        
 126   1        offset_x = x2 - x1;
 127   1        offset_y = y2 - y1; 
 128   1        uRow = x1; 
 129   1        uCol = y1; 
 130   1        
 131   1        if(offset_x>0)
 132   1          incx=1;
 133   1        else if(offset_x==0)
 134   1          incx=0;
 135   1        else
 136   1        {
 137   2          incx      =-1;
 138   2          offset_x  =-offset_x;
 139   2        }
 140   1      
 141   1        if(offset_y>0)
 142   1          incy=1;
 143   1        else if(offset_y==0)
 144   1          incy=0;    //水平线
 145   1        else
 146   1        {
 147   2          incy      =-1;
 148   2          offset_y  =-offset_y;
 149   2        }
 150   1      
 151   1        if(incx==0)
 152   1        {
 153   2          for(t=0;t<=offset_y+1;t++ )
 154   2          {
 155   3            OLED_DrawDot(uRow,  uCol+t*incy);
 156   3          }
 157   2        }
 158   1        else if(incy==0)
 159   1        {
 160   2          for(t=0;t<=offset_x+1;t++ )
 161   2            OLED_DrawDot(uRow+t*incx,uCol);
 162   2        }
 163   1        else
 164   1        {
 165   2          K = (float)(((float)y2-(float)y1)*1.000/((float)x2-(float)x1));
 166   2          
 167   2          for(t=0;t<=offset_x+1;t++ )
 168   2            OLED_DrawDot(uRow+t,(u8)(uCol+t*K));
 169   2        }
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    882    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
C51 COMPILER V9.60.0.0   OLED                                                              12/26/2024 09:12:18 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
